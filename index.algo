//sum of all distinct elements from the set
ALGORITHM somme
VAR
    var set1: ARRAY_OF INTEGER();
    var set2: ARRAY_OF INTEGER();
    sum: INTEGER:=0;
    x,j:INTEGER:=0;
BEGIN
    FOR i FROM 0 TO set1.length-1 STEP 1  DO
        j:=0;
        WHILE (j<set2.length) DO
            IF (set1[i]<>set2[j]) THEN
                x=set1[i]
                j=j+1
            ELSE
                x=0;
                j=set2.length
            END_IF
        END_WHILE
        sum=sum+x
    END_FOR
    FOR i FROM 0 TO set2.length-1 STEP 1  DO
        j:=0;
        WHILE (j<set1.length) DO
            IF (set2[i]<>set1[j]) THEN
                x=set2[i]
                j=j+1
            ELSE
                x=0;
                j=set1.length
            END_IF
        END_WHILE
        sum=sum+x
    END_FOR
    write(sum)
END

//sum of all distinct elements from the set(2eme m√©thode)

ALGORITHM algorithm_name
VAR
    var set1: ARRAY_OF INTEGER();
    var set2: ARRAY_OF INTEGER();
    htab : HASH_TABLE<INTEGER,INTEGER>;
    tab : ARRAY_OF INTEGER;
    sum : INTEGER;
BEGIN
    FOR i FROM 0 TO set1.length-1 STEP 1  DO
        htab.insert(set1[i],1);
    END_FOR
    FOR i FROM 0 TO set2.length-1 STEP 1  DO
        IF (htab.lookup(set2[i])=true) THEN
            htab.insert(set2[i],2)
        ELSE
            htab.insert(set2[i],1);
        END_IF
    END_FOR
    tab=htab.getkeys();
    FOR i FROM 0 TO tab.length-1 STEP 1  DO
        IF (htab.get(tab[i])=1) THEN
            sum+=tab[i]
        END_IF
    END_FOR
    write(sum);
END


//sum of overlapping elements in two sets

ALGORITHM algorithm_name
VAR
    var set1: ARRAY_OF INTEGER();
    var set2: ARRAY_OF INTEGER();
    sum: INTEGER:=0;
    stk: STACK;
BEGIN
    FOR i FROM 1 TO set1.length step 1 DO
        FOR j FROM 0 TO set2.length STEP 1  DO
            IF (set1[i]=set2[j]) THEN
                stk.puch(set1[i]*2)
            END_IF
        END_FOR
    END_FOR
    WHILE (stk.isEmpty) DO
        sum=sum+stk.peek;
        stk.pop();
    END_WHILE
    write(sum);
END
